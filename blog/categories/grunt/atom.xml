<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: grunt | Blog]]></title>
  <link href="http://jtbonhomme.github.io/blog/categories/grunt/atom.xml" rel="self"/>
  <link href="http://jtbonhomme.github.io/"/>
  <updated>2014-07-05T17:03:59+02:00</updated>
  <id>http://jtbonhomme.github.io/</id>
  <author>
    <name><![CDATA[Jean-Thierry BONHOMME]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Grunt: l'automatisation facile]]></title>
    <link href="http://jtbonhomme.github.io/blog/2014/07/05/grunt-lautomatisation-facile/"/>
    <updated>2014-07-05T11:03:24+02:00</updated>
    <id>http://jtbonhomme.github.io/blog/2014/07/05/grunt-lautomatisation-facile</id>
    <content type="html"><![CDATA[<p><img src="http://gruntjs.com/img/grunt-logo.svg" alt="" /></p>

<p>La majorité des développeurs que je connais ont un point commun, une caractéristique qui les distinguent des autres professions.</p>

<p>Ils sont paresseux.</p>

<p>Loin d'être un défaut, cette paresse est encouragée car elle se traduit pas une tendance à éviter les tâches répétitives et fasitidieuses, et libèrent du temps pour les activités plus productives (écriture de documentation et test &hellip; quoique &hellip;)</p>

<p>Les outils qui permettent au développeur consciencieux d'en faire le moins possible foisonnent; générateurs de templates et boilerplates, snippets, gist et autres pastebin, et outils d'automatisation.</p>

<p>c'est à cette dernière catégorie que nous allons nous intéresser et plus particulièrement au plus célèbre d'entre eux: <a href="http://gruntjs.com/">grunt</a>.</p>

<blockquote><p>tous les codes source de cet article sont disponibles sous <a href="https://github.com/jtbonhomme/grunt-article">github</a></p></blockquote>

<h1>A quoi ça sert ?</h1>

<p>Grunt est un exécuteur de tâches qui peuvent être lancées unitairement, ou par groupes.</p>

<p>Pour parler concrêtement, le travail quotidien d'un dev front consiste quasi continuellement à :</p>

<ul>
<li>développer ou modifier son code (ou celui du voisin)</li>
<li>corriger les fautes de syntaxes qui ne correspondent pas aux règles de codage</li>
<li>vider les répertoires de sortie où sont compilés mes fichiers</li>
<li>compiler ses templates pour générer les fichiers html</li>
<li>compiler et minifier ses fichiers html</li>
<li>lancer ses tests unitaires (si, il paraît que ça se fait beaucoup)</li>
<li>déployer son application</li>
<li>rafraîchir son navigateur</li>
</ul>


<p>Et recommencer &hellip;</p>

<p>Grunt permet d'automatiser la plupart de ces tâches (non, il n'écrira pas le code ou la doc pour vous, mais il peut néanmoins générer la documentation yuidoc par exemple)</p>

<p>Si on ajoute à ça une communauté active qui propose des tâches pour vous faciliter la vie, pourquoi hésiter plus longtemps ?</p>

<h1>Par quoi on commence ?</h1>

<blockquote><p>PS: toutes les manipulations ci-dessous tournent sous MAC, avec nodejs et npm installés</p></blockquote>

<p>Il faut d'abord installer grunt et l'outil de ligne de commande grunt-cli</p>

<p><code>
% npm install -g grunt-cli
</code>
Si à cette étape vous vous amusez à exécuter la commande grunt (ben, faites le, histoire de suivre un peu), vous risquez de voir ceci apparaître :</p>

<p>```
% grunt
grunt-cli: The grunt command line interface. (v0.1.9)</p>

<p>Fatal error: Unable to find local grunt.</p>

<p>If you&rsquo;re seeing this message, either a Gruntfile wasn&rsquo;t found or grunt
hasn&rsquo;t been installed locally to your project. For more information about
installing and configuring grunt, please see the Getting Started guide:</p>

<p><a href="http://gruntjs.com/getting-started">http://gruntjs.com/getting-started</a>
```</p>

<p>Ce message indique que le moteur de grunt n'est pas installé, et que grunt utilise un fichier de configuration <code>Grunfile.js</code> décrivant l'ensemble des tâches que vous souhaitez le voir faire exécuter.</p>

<h1>Installation de grunt</h1>

<p>Créez puis ouvrez les fichier suivant avec votre éditeur favori.</p>

<p><code>
% touch Gruntfile.js package.json
</code></p>

<p>Nous allons tout d'abord installer le package node de grunt en utilisant le gestionnaire de packages de node.
Commencez par éditer le fichier package.json.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>package.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">&amp;ldquo;name&amp;rdquo;:</span> <span class="err">&amp;ldquo;grunt-article&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;private&amp;rdquo;:</span> <span class="err">false,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;description&amp;rdquo;:</span> <span class="err">&amp;ldquo;Grunt</span> <span class="err">article</span> <span class="err">source</span> <span class="err">files&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;version&amp;rdquo;:</span> <span class="err">&amp;ldquo;0.0.1&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;author&amp;rdquo;:</span> <span class="err">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;</span><span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;jtbonhomme&quot;</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span>  <span class="p">}</span><span class="err">,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;devDependencies&amp;rdquo;:</span> <span class="p">{</span><span class="err">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;</span><span class="nt">&quot;grunt&quot;</span> <span class="p">:</span> <span class="s2">&quot;~0.4.5&quot;</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Sauvez et lancez la commande qui installe les dépendances node:</p>

<p><code>
npm install
</code></p>

<p>A cette étape, vous devez pouvoir exécuter grunt (l'option -v pour verbose):</p>

<p>```
% grunt -v
Initializing
Command-line options: &mdash;verbose</p>

<p>Reading &ldquo;Gruntfile.js&rdquo; Gruntfile&hellip;OK</p>

<p>Registering Gruntfile tasks.
Loading &ldquo;Gruntfile.js&rdquo; tasks&hellip;OK</p>

<blockquote><blockquote><p>No tasks were registered or unregistered.</p></blockquote></blockquote>

<p>No tasks specified, running default tasks.
Running tasks: default
Warning: Task &ldquo;default&rdquo; not found. Use &mdash;force to continue.</p>

<p>Aborted due to warnings.
```</p>

<p>On voit que grunt cherche dans le fichier Gruntfile.js les tâches à enregistrer et, en l'absence d'indication complémentaire, essaie de lancer une tâche <code>default</code>, qu'il ne trouve pas parce que, pour ceux qui suivent, nous n'avons encore rien écrit dans Gruntfile.js.</p>

<h1>Gruntfile.js</h1>

<p>Imaginons que nous compilons notre projet et que le résultat soit déposé dans un répertoire <code>public</code> et que nous souhaitons définir une tâche qui permette de vider le contenu de ce répertoire.</p>

<p>Nous allons utiliser un des nombreux plugins de grunt : <code>grunt-contrib-clean</code></p>

<p><code>
% npm install grunt-contrib-clean --save-dev
</code></p>

<blockquote><p>l'option &mdash;save-dev permet d'ajouter automatiquementla dépendance au fichier package.json</p></blockquote>

<p>Editez le fichier Gruntfile.js pour ajouter le code suivant:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">clean</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">all</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;public&#39;</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Load the plugin that provides the &amp;ldquo;uglify&amp;rdquo; task.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">grunt</span><span class="o">-</span><span class="nx">contrib</span><span class="o">-</span><span class="nx">clean</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">clean</span><span class="o">:</span><span class="nx">all</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Puis, créez un répertoire <code>public</code>, ajoutez-y un fichier <code>test</code> et lancez grunt:</p>

<p>```
% mkdir public
% touch public/test
% ls
Gruntfile.js node_modules package.json public
% grunt
Running &ldquo;clean:all&rdquo; (clean) task
Cleaning public&hellip;OK</p>

<p>Done, without errors.
% ls
Gruntfile.js node_modules package.json
```</p>

<p>Le répertoire <code>public</code> et son contenu ont bien été supprimés.</p>

<p>Nous avons créé notre première tâche grunt.</p>

<h1>Les plugins</h1>

<p>Grunt est beaucoup supporté par la communauté, et la multitude de <a href="http://gruntjs.com/plugins">plugins disponibles</a> pourront vous rendre de grands services.</p>

<p>Quelques exemples parmi les plus connus:</p>

<ul>
<li><a href="https://github.com/gruntjs/grunt-contrib-watch">grunt-contrib-watch</a> : permet de surveiller une arborescence de fichier de de déclencher des actions en cas de modification de l'un d'eux (voir exemples ci-dessous)</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-copy">grunt-contrib-copy</a> : comme le nom l'indique, permet de copier des fichiers d'un répertoire A à un répertoire B</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-concat">grunt-contrib-concat</a> : concatène plusieurs fichiers en un seul</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-uglify">grunt-contrib-uglify</a> : &ldquo;minifie&rdquo; des fichiers en utilisant la librairie UglifyJS</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-jshint">grunt-contrib-jshint</a> : linter javascript utilisant la librairie <a href="http://www.jshint.com/">JSHint</a> (voir exemple plus bas)</li>
<li><a href="https://github.com/sindresorhus/grunt-shell">grunt-shell</a> : permet de définir des tâches custom utilisant le shell (voir exemple plus bas)</li>
</ul>


<h1>Pour aller plus loin &hellip;</h1>

<p>Pour ceux qui souhaitent approfondir un peu, vous trouverez ci-dessous quelques exemples complémentaires et un paragraphe sur l'utilisation de tâches personnalisées.</p>

<h2>Quelques exemples d'utilisation des plugins</h2>

<h4>grunt-contrib-jshint</h4>

<p>JSHint permet de détecter dans le code javascript des erreurs de syntaxe simples (oubli d'un &lsquo;;&rsquo; à la fin d'une ligne, oubli d'une accolade à la fin d'un bloc, utilisation de noms de variable non conforme, &hellip;)</p>

<p>Il s'installe de la manière suivante:</p>

<p><code>
% npm install grunt-contrib-jshint --save-dev
</code>
Et il se configure dans le Gruntfile suivant l'exmple ci-dessous, qui va vérifier le fichier <code>Gruntfile.js</code> lui-même, et tous les fichiers javascript se trouvant dans le répertoire <code>js</code> :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>   <span class="nx">jshint</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="nx">files</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;Gruntfile.js&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;js/**/*.js&#39;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Load the plugin that provides the &amp;ldquo;uglify&amp;rdquo; task.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">grunt</span><span class="o">-</span><span class="nx">contrib</span><span class="o">-</span><span class="nx">jshint</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">jshint</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Puis il vous suffit d'exécuter la commande <code>grunt</code>:</p>

<p>```
% grunt
Running &ldquo;jshint:files&rdquo; (jshint) task</p>

<blockquote><blockquote><p>1 file lint free.</p></blockquote></blockquote>

<p>Done, without errors.
```</p>

<p>On voit que le fichier <code>Gruntfile.js</code> a été vérifié avec succès.</p>

<h4>grunt-contrib-watch</h4>

<h4>grunt-shell</h4>

<h2>Créer ses propres tâches</h2>
]]></content>
  </entry>
  
</feed>
