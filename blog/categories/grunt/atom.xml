<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: grunt | Blog]]></title>
  <link href="http://jtbonhomme.github.io/blog/categories/grunt/atom.xml" rel="self"/>
  <link href="http://jtbonhomme.github.io/"/>
  <updated>2014-07-06T11:16:06+02:00</updated>
  <id>http://jtbonhomme.github.io/</id>
  <author>
    <name><![CDATA[Jean-Thierry BONHOMME]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Grunt: l'automatisation facile]]></title>
    <link href="http://jtbonhomme.github.io/blog/2014/07/05/grunt-lautomatisation-facile/"/>
    <updated>2014-07-05T11:03:24+02:00</updated>
    <id>http://jtbonhomme.github.io/blog/2014/07/05/grunt-lautomatisation-facile</id>
    <content type="html"><![CDATA[<p><img src="http://gruntjs.com/img/grunt-logo.svg" alt="" /></p>

<p>La majorité des développeurs que je connais ont un point commun, une caractéristique qui les distinguent des autres professions.</p>

<p>Ils sont paresseux.</p>

<p>Loin d'être un défaut, cette paresse est encouragée car elle se traduit par une tendance à éviter les tâches répétitives et fasitidieuses, et libèrent du temps pour les activités plus productives (écriture de documentation et test &hellip; quoique &hellip;)</p>

<p>Les outils qui permettent au développeur consciencieux d'en faire le moins possible foisonnent; générateurs de templates et boilerplates, snippets, gist et autres pastebin, et outils d'automatisation.</p>

<p>C'est à cette dernière catégorie d'outils que nous allons nous intéresser et plus particulièrement au plus célèbre d'entre eux: <a href="http://gruntjs.com/">grunt</a>.</p>

<blockquote><p>tous les codes source de cet article sont disponibles sous <a href="https://github.com/jtbonhomme/grunt-article">github</a></p></blockquote>

<h1>A quoi ça sert ?</h1>

<p>Grunt est un exécuteur de tâches qui peuvent être lancées unitairement, ou par groupes.</p>

<p>Pour parler concrêtement, le travail quotidien d'un dev front consiste quasi continuellement à :</p>

<ul>
<li>développer ou modifier son code (ou celui du voisin)</li>
<li>corriger les fautes de syntaxes qui ne correspondent pas aux règles de codage</li>
<li>vider les répertoires de sortie où sont compilés mes fichiers</li>
<li>compiler ses templates pour générer les fichiers html</li>
<li>compiler et minifier ses fichiers html</li>
<li>lancer ses tests unitaires (si si si, il paraît que ça se fait beaucoup)</li>
<li>déployer son application</li>
<li>rafraîchir son navigateur</li>
</ul>


<p>Et recommencer &hellip;</p>

<p>Grunt permet d'automatiser la plupart de ces tâches (non, il n'écrira pas le code ou la doc pour vous, mais il peut néanmoins générer la documentation yuidoc par exemple)</p>

<p>Si on ajoute à ça une communauté active qui propose un grand nombre de plugins pour vous faciliter la vie, pourquoi hésiter plus longtemps ?</p>

<h1>Par quoi on commence ?</h1>

<blockquote><p>PS: toutes les manipulations ci-dessous tournent sous MAC, avec nodejs et npm installés</p></blockquote>

<p>Il faut d'abord installer grunt et l'outil de ligne de commande grunt-cli</p>

<p><code>
% npm install -g grunt-cli
</code>
Si à cette étape vous vous amusez à exécuter la commande grunt (ben, faites le, histoire de suivre un peu), vous risquez de voir ceci apparaître :</p>

<p>```
% grunt
grunt-cli: The grunt command line interface. (v0.1.9)</p>

<p>Fatal error: Unable to find local grunt.</p>

<p>If you&rsquo;re seeing this message, either a Gruntfile wasn&rsquo;t found or grunt
hasn&rsquo;t been installed locally to your project. For more information about
installing and configuring grunt, please see the Getting Started guide:</p>

<p><a href="http://gruntjs.com/getting-started">http://gruntjs.com/getting-started</a>
```</p>

<p>Ce message indique que le moteur de grunt n'est pas installé, et que grunt utilise un fichier de configuration <code>Grunfile.js</code> décrivant l'ensemble des tâches que vous souhaitez le voir faire exécuter.</p>

<h1>Configuration de grunt</h1>

<p>Créez puis ouvrez les fichier suivant avec votre éditeur favori.</p>

<p><code>
% touch Gruntfile.js package.json
</code></p>

<p>Nous allons tout d'abord installer le package node de grunt en utilisant le gestionnaire de packages de node.
Commencez par éditer le fichier package.json.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>package.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">&amp;ldquo;name&amp;rdquo;:</span> <span class="err">&amp;ldquo;grunt-article&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;private&amp;rdquo;:</span> <span class="err">false,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;description&amp;rdquo;:</span> <span class="err">&amp;ldquo;Grunt</span> <span class="err">article</span> <span class="err">source</span> <span class="err">files&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;version&amp;rdquo;:</span> <span class="err">&amp;ldquo;0.0.1&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;author&amp;rdquo;:</span> <span class="err">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;</span><span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;jtbonhomme&quot;</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span>  <span class="p">}</span><span class="err">,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;devDependencies&amp;rdquo;:</span> <span class="p">{</span><span class="err">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;</span><span class="nt">&quot;grunt&quot;</span> <span class="p">:</span> <span class="s2">&quot;~0.4.5&quot;</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Sauvez et lancez la commande qui installe les dépendances node:</p>

<p><code>
npm install
</code></p>

<p>A cette étape, vous devez pouvoir exécuter grunt (l'option -v pour verbose):</p>

<p>```
% grunt -v
Initializing
Command-line options: &mdash;verbose</p>

<p>Reading &ldquo;Gruntfile.js&rdquo; Gruntfile&hellip;OK</p>

<p>Registering Gruntfile tasks.
Loading &ldquo;Gruntfile.js&rdquo; tasks&hellip;OK</p>

<blockquote><blockquote><p>No tasks were registered or unregistered.</p></blockquote></blockquote>

<p>No tasks specified, running default tasks.
Running tasks: default
Warning: Task &ldquo;default&rdquo; not found. Use &mdash;force to continue.</p>

<p>Aborted due to warnings.
```</p>

<p>On voit que grunt cherche dans le fichier Gruntfile.js les tâches à enregistrer et, en l'absence d'indication complémentaire, essaie de lancer une tâche <code>default</code>, qu'il ne trouve pas parce que, pour ceux qui suivent, nous n'avons encore rien écrit dans Gruntfile.js.</p>

<h1>La première tâche</h1>

<p>Imaginons que nous compilons notre projet et que le résultat soit déposé dans un répertoire <code>public</code> et que nous souhaitons définir une tâche qui permette de vider le contenu de ce répertoire.</p>

<p>Nous allons utiliser un des nombreux plugins de grunt : <code>grunt-contrib-clean</code></p>

<p><code>
% npm install grunt-contrib-clean --save-dev
</code></p>

<blockquote><p>l'option &mdash;save-dev permet d'ajouter automatiquement la dépendance au fichier package.json</p></blockquote>

<p>Editez le fichier Gruntfile.js pour ajouter le code suivant:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">clean</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">all</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;public&#39;</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Load the plugin that provides the &amp;ldquo;uglify&amp;rdquo; task.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">grunt</span><span class="o">-</span><span class="nx">contrib</span><span class="o">-</span><span class="nx">clean</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">clean</span><span class="o">:</span><span class="nx">all</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Puis, créez un répertoire <code>public</code>, ajoutez-y un fichier <code>test</code> et lancez grunt:</p>

<p>```
% mkdir public
% touch public/test
% ls
Gruntfile.js node_modules package.json public
% grunt
Running &ldquo;clean:all&rdquo; (clean) task
Cleaning public&hellip;OK</p>

<p>Done, without errors.
% ls
Gruntfile.js node_modules package.json
```</p>

<p>Le répertoire <code>public</code> et son contenu ont bien été supprimés.</p>

<p>Nous avons créé notre première tâche grunt.</p>

<h1>Les plugins</h1>

<p>Grunt est beaucoup supporté par la communauté, et la multitude de <a href="http://gruntjs.com/plugins">plugins disponibles</a> pourront vous rendre de grands services.</p>

<p>Quelques exemples parmi les plus connus:</p>

<ul>
<li><a href="https://github.com/gruntjs/grunt-contrib-watch">grunt-contrib-watch</a> : permet de surveiller une arborescence de fichier de de déclencher des actions en cas de modification de l'un d'eux (voir exemples ci-dessous)</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-copy">grunt-contrib-copy</a> : comme le nom l'indique, permet de copier des fichiers d'un répertoire A à un répertoire B</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-concat">grunt-contrib-concat</a> : concatène plusieurs fichiers en un seul</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-uglify">grunt-contrib-uglify</a> : &ldquo;minifie&rdquo; des fichiers en utilisant la librairie UglifyJS</li>
<li><a href="https://github.com/gruntjs/grunt-contrib-jshint">grunt-contrib-jshint</a> : linter javascript utilisant la librairie <a href="http://www.jshint.com/">JSHint</a> (voir exemple plus bas)</li>
<li><a href="https://github.com/sindresorhus/grunt-shell">grunt-shell</a> : permet de définir des tâches custom utilisant le shell (voir exemple plus bas)</li>
</ul>


<h1>Pour aller plus loin &hellip;</h1>

<p>Pour ceux qui souhaitent approfondir un peu, vous trouverez ci-dessous quelques exemples complémentaires et un paragraphe sur l'utilisation de tâches personnalisées.</p>

<h2>Quelques exemples d'utilisation des plugins</h2>

<h4>grunt-contrib-jshint</h4>

<p>JSHint permet de détecter dans le code javascript des erreurs de syntaxe simples (oubli d'un &lsquo;;&rsquo; à la fin d'une ligne, oubli d'une accolade à la fin d'un bloc, utilisation de noms de variable non conforme, &hellip;)</p>

<p>Il s'installe de la manière suivante:</p>

<p><code>
% npm install grunt-contrib-jshint --save-dev
</code>
Et il se configure dans le Gruntfile suivant l'exemple ci-dessous, qui va vérifier le fichier <code>Gruntfile.js</code> lui-même, et tous les fichiers javascript se trouvant dans le répertoire <code>js</code> :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>   <span class="nx">jshint</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="nx">files</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;Gruntfile.js&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;js/**/*.js&#39;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Load the plugin that provides the &amp;ldquo;jshint&amp;rdquo; task.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">grunt</span><span class="o">-</span><span class="nx">contrib</span><span class="o">-</span><span class="nx">jshint</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">jshint</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Puis il vous suffit d'exécuter la commande <code>grunt</code>:</p>

<p>```
% grunt
Running &ldquo;jshint:files&rdquo; (jshint) task</p>

<blockquote><blockquote><p>1 file lint free.</p></blockquote></blockquote>

<p>Done, without errors.
```</p>

<p>On voit que le fichier <code>Gruntfile.js</code> a été vérifié avec succès.</p>

<h4>grunt-contrib-watch</h4>

<p>Le plugin watch permet de déclencher des tâche lorsque des fichiers sont modifiés.</p>

<p>Il s'installe de la manière suivante:</p>

<p><code>
% npm install grunt-contrib-watch --save-dev
</code>
Et il se configure dans le Gruntfile suivant l'exemple ci-dessous :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">dirs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">app</span><span class="o">:</span>     <span class="s1">&#39;app/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">js</span><span class="o">:</span>      <span class="s1">&#39;app/js/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">css</span><span class="o">:</span>     <span class="s1">&#39;app/css/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kr">public</span><span class="o">:</span>  <span class="s1">&#39;public/&#39;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="nx">files</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">all</span><span class="o">:</span> <span class="s1">&#39;**/*&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">js</span><span class="o">:</span>  <span class="s1">&#39;**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">css</span><span class="o">:</span> <span class="s1">&#39;**/*.css&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">img</span><span class="o">:</span> <span class="s1">&#39;**/*.{png,gif,jpg,jpeg}&#39;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="nx">watch</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">jshint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">files</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;&amp;lt;%= dirs.js %&amp;gt;&amp;lt;%= files.js %&amp;gt;&#39;</span><span class="p">,</span> <span class="s1">&#39;&amp;lt;%= dirs.public %&amp;gt;&amp;lt;%= files.js %&amp;gt;&#39;</span><span class="p">,</span> <span class="s1">&#39;Gruntfile.js&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">tasks</span><span class="o">:</span> <span class="s1">&#39;jshint&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Load the plugin that provides the &amp;ldquo;watch&amp;rdquo; task.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">grunt</span><span class="o">-</span><span class="nx">contrib</span><span class="o">-</span><span class="nx">watch</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">watch</span><span class="o">:</span><span class="nx">jshint</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>On en profite pour ajouter 2 hash qui permettront ensuite de gagner du temps: <code>dirs</code> et <code>files</code> et qui définissent les répertoires et catégories de fichiers qui seront utilisés ensuite dans les tâches.
Vous retrouvez les 2 lignes qui chargent le plugin (<code>grunt.loadNpmTasks(&lsquo;grunt-contrib-watch&rsquo;);</code>) et enregistrent votre tâche (<code>grunt.registerTask(&lsquo;default&rsquo;, [&lsquo;watch:jshint&rsquo;]);</code>)</p>

<p>La configuration du pluging comporte une section qui défini la tâche à lancer <code>jshint</code> et quels sont les fichiers à surveiller.
Dans notre cas, nous allons linter tous les fichiers js qui se trouvent dans les répertoires <code>js</code> et <code>public</code>, ainsi que le fichier <code>Gruntfile.js</code>.</p>

<p>Il ne reste plus qu'à exécuter la tâche :</p>

<p><code>
% grunt watch:jshint
Running "watch:jshint" (watch) task
Waiting...
</code></p>

<p>Encore un petit truc, si vous n'avez pas enregistré de tâche personnelles avec la propriété <code>registerTask</code>, vous pouvez toujours exécuter les tâches définies dans le <code>initConfig()</code>.</p>

<p>Il ne nous reste plus qu'à provoquer un changement dans le fichier <code>Gruntfile.js</code> en supprimant un point-virgule en fin de ligne par exemple (ne pas oublier de sauver le fichier)</p>

<p>```
% grunt watch:jshint
Running &ldquo;watch:jshint&rdquo; (watch) task
Waiting&hellip;</p>

<p>Reloading watch config&hellip;</p>

<p>Running &ldquo;watch:jshint&rdquo; (watch) task
Waiting&hellip;</p>

<blockquote><blockquote><p>File &ldquo;Gruntfile.js&rdquo; changed.
Running &ldquo;jshint:files&rdquo; (jshint) task</p></blockquote></blockquote>

<p>   Gruntfile.js</p>

<pre><code> 47 |  })
         ^ Missing semicolon.
</code></pre>

<blockquote><blockquote><p>1 error in 1 file
Warning: Task &ldquo;jshint:files&rdquo; failed. Use &mdash;force to continue.</p></blockquote></blockquote>

<p>Aborted due to warnings.
Completed in 0.946s at Sun Jul 06 2014 10:01:10 GMT+0200 (CEST) &ndash; Waiting&hellip;
```</p>

<p>Si on corrige l'erreur:</p>

<p>```
% grunt watch:jshint
Running &ldquo;watch:jshint&rdquo; (watch) task
Waiting&hellip;</p>

<p>Reloading watch config&hellip;</p>

<p>Running &ldquo;watch:jshint&rdquo; (watch) task
Waiting&hellip;</p>

<blockquote><blockquote><p>File &ldquo;Gruntfile.js&rdquo; changed.
Running &ldquo;jshint:files&rdquo; (jshint) task</p></blockquote></blockquote>

<p>   Gruntfile.js</p>

<pre><code> 47 |  })
         ^ Missing semicolon.
</code></pre>

<blockquote><blockquote><p>1 error in 1 file
Warning: Task &ldquo;jshint:files&rdquo; failed. Use &mdash;force to continue.</p></blockquote></blockquote>

<p>Aborted due to warnings.
Completed in 0.946s at Sun Jul 06 2014 10:01:10 GMT+0200 (CEST) &ndash; Waiting&hellip;</p>

<p>Reloading watch config&hellip;</p>

<p>Running &ldquo;watch:jshint&rdquo; (watch) task
Waiting&hellip;</p>

<blockquote><blockquote><p>File &ldquo;Gruntfile.js&rdquo; changed.
Running &ldquo;jshint:files&rdquo; (jshint) task
1 file lint free.</p></blockquote></blockquote>

<p>Done, without errors.
Completed in 1.095s at Sun Jul 06 2014 10:02:58 GMT+0200 (CEST) &ndash; Waiting&hellip;
```</p>

<p>Ouf, la catastrophe est évitée.</p>

<h4>grunt-shell</h4>

<p>Le dernier plugin que nous allons étudier est le plugin <code>grunt-shell</code>.
Ce plugin permet d'exécuter des commandes système dans grunt.</p>

<p>Dans notre exemple, nous allons créer une tâche qui réalise une commande <code>git log</code>.
On pourra plus tard, réaliser un &ldquo;rsync&rdquo; pour déployer son application sur un serveur de préproduction.</p>

<p>Vous connaissez la manipulation, on commence par installer le plugin:</p>

<p><code>
% npm install grunt-shell --save-dev
</code>
Et on le configure dans le Gruntfile suivant l'exemple ci-dessous :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Shell logging function</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">logShell</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">stdout</span><span class="p">,</span> <span class="nx">stderr</span><span class="p">,</span> <span class="nx">cb</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;Command failed on &#39;</span> <span class="o">+</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">ok</span><span class="p">(</span><span class="s1">&#39;Command executed on &#39;</span> <span class="o">+</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">cb</span><span class="p">();</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">dirs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">app</span><span class="o">:</span>     <span class="s1">&#39;app/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">js</span><span class="o">:</span>      <span class="s1">&#39;app/js/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">css</span><span class="o">:</span>     <span class="s1">&#39;app/css/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kr">public</span><span class="o">:</span>  <span class="s1">&#39;public/&#39;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="nx">files</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">all</span><span class="o">:</span> <span class="s1">&#39;**/*&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">js</span><span class="o">:</span>  <span class="s1">&#39;**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">css</span><span class="o">:</span> <span class="s1">&#39;**/*.css&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">img</span><span class="o">:</span> <span class="s1">&#39;**/*.{png,gif,jpg,jpeg}&#39;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="nx">shell</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">failOnError</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">callback</span><span class="o">:</span> <span class="nx">logShell</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">stdout</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">stderr</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">gitlog</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">command</span><span class="o">:</span> <span class="s1">&#39;git log&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Load the plugin that provides the &amp;ldquo;shell&amp;rdquo; task.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">grunt</span><span class="o">-</span><span class="nx">shell</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">shell</span><span class="o">:</span><span class="nx">gitlog</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>La section de configuration de la tâche <ode>shell</code> contient 2 sous-sections.
La première configure de manière générale le plugin. On remarque qu'il est possible d'appeler une callback (nous avons défini une fonction <code>logShell</code>) et d'activer les sorties standards stdout et stderr.
Les sous-sections suivantes définissent les appels systèmes.</p>

<p>Essayons :</p>

<p>```
% grunt shell:gitlog
Running &ldquo;shell:gitlog&rdquo; (shell) task
commit 8a797952e14d0e5301432fce2dca8d944e172f36
Author: Jean-Thierry BONHOMME <a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x6a;&#116;&#98;&#111;&#110;&#104;&#x6f;&#109;&#x6d;&#x65;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;">&#106;&#116;&#98;&#x6f;&#x6e;&#x68;&#111;&#109;&#x6d;&#x65;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a>
Date:   Sat Jul 5 17:04:32 2014 +0200</p>

<pre><code>Added jshint task
</code></pre>

<p>commit 85fc208f8e2ee257a782d0787c4233d3167044a8
Author: Jean-Thierry BONHOMME <a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#58;&#106;&#x74;&#98;&#111;&#110;&#x68;&#111;&#x6d;&#109;&#101;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;">&#x6a;&#116;&#x62;&#111;&#x6e;&#x68;&#111;&#109;&#x6d;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;</a>
Date:   Sat Jul 5 16:18:21 2014 +0200</p>

<pre><code>Update article reference)
</code></pre>

<p>commit 752d0c8b6cc74c6a98417d43e42ba486020aa4db
Author: Jean-Thierry BONHOMME <a href="&#109;&#x61;&#105;&#x6c;&#116;&#111;&#58;&#x6a;&#x74;&#x62;&#111;&#x6e;&#x68;&#x6f;&#x6d;&#x6d;&#x65;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;">&#x6a;&#x74;&#98;&#111;&#x6e;&#x68;&#111;&#x6d;&#x6d;&#101;&#x40;&#x67;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a>
Date:   Sat Jul 5 16:17:34 2014 +0200</p>

<pre><code>First commit
</code></pre>

<p>commit 4b6649ed0c838723565649c6fbc0189bec19c874
Author: Jean-Thierry BONHOMME <a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x6a;&#116;&#x62;&#x6f;&#x6e;&#x68;&#x6f;&#109;&#109;&#101;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#x6a;&#116;&#98;&#111;&#110;&#x68;&#111;&#109;&#109;&#x65;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a>
Date:   Sat Jul 5 16:14:15 2014 +0200</p>

<pre><code>Initial commit
</code></pre>

<blockquote><blockquote><p>Command executed on Sun Jul 06 2014 10:22:28 GMT+0200 (CEST)</p></blockquote></blockquote>

<p>Done, without errors.
```
On est bien d'accord que c'est juste un exemple, et que cette tâche ne présente aucun intérêt pratique, il serait évidemment plus simple d'entrer la commande <code>% git log</code>&hellip;</p>

<h2>Créer ses propres tâches</h2>

<p>La <a href="http://gruntjs.com/creating-tasks">documentation grunt</a> détaille la manière de créer ses propres tâches.</p>

<h4>Tâches personnalisées simples</h4>

<p>Le plus simple pour créer une tâche est de la développer directement dans le Gruntfile :</p>

<p><code>
grunt.registerTask('foo', 'My "foo" task.', function() {
  grunt.log.writeln('Execution de la tache "foo"');
});
</code></p>

<p>Puis appelez la directement :</p>

<p>```
% grunt foo
Running &ldquo;foo&rdquo; task
Execution de la tache &ldquo;foo&rdquo;</p>

<p>Done, without errors.
```</p>

<p>C'est relativement pratique pour les scripts simple. Pour développer des tâches plus complexes, voici comment procéder.</p>

<h4>Tâches personnalisées complexes</h4>

<p>Les tâches personnalisées sont stockées dans un répertoire qui peut être chargé par grunt. Dans notre cas, nosu avons créé une tâche <code>hash</code> (merci <a href="https://github.com/jinroh">@jinroh</a>) qui calcul un hash md5 sur des fichiers.</p>

<p>On modifie les Gruntfile comme suit:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadTasks</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">tasks</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Project configuration.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="c1">// custom variables configuration</span>
</span><span class='line'><span class="nx">dirs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">app</span><span class="o">:</span>     <span class="s1">&#39;app/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">js</span><span class="o">:</span>      <span class="s1">&#39;app/js/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">css</span><span class="o">:</span>     <span class="s1">&#39;app/css/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kr">public</span><span class="o">:</span>  <span class="s1">&#39;public/&#39;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="nx">files</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">all</span><span class="o">:</span> <span class="s1">&#39;**/*&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">js</span><span class="o">:</span>  <span class="s1">&#39;**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">css</span><span class="o">:</span> <span class="s1">&#39;**/*.css&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">img</span><span class="o">:</span> <span class="s1">&#39;**/*.{png,gif,jpg,jpeg}&#39;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hash</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">prefix</span><span class="o">:</span> <span class="s1">&#39;./&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">publics</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">src</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="s1">&#39;Gruntfile.js&#39;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>    <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;&amp;lt;%= dirs.public %&amp;gt;hash&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Default task(s).</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="k">default</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">watch</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Puis on crée un répertoire <code>tasks</code> contenant un fichiers <code>hash.js</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>hash.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">/&lt;em&gt; jshint node:true &lt;/em&gt;/&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">crypto</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">crypto</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="kd">function</span> <span class="nx">md5</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">read</span><span class="p">(</span><span class="nx">file</span><span class="p">,</span> <span class="p">{</span> <span class="nx">encoding</span><span class="o">:</span> <span class="kc">null</span> <span class="p">});</span>
</span><span class='line'><span class="k">return</span> <span class="nx">crypto</span><span class="p">.</span><span class="nx">createHash</span><span class="p">(</span><span class="s1">&#39;md5&#39;</span><span class="p">).</span><span class="nx">update</span><span class="p">(</span><span class="nx">data</span><span class="p">).</span><span class="nx">digest</span><span class="p">(</span><span class="s1">&#39;hex&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerMultiTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">hash</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Create</span> <span class="nx">the</span> <span class="nx">hash</span> <span class="nx">file</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">prefix</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s1">&#39;^&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">().</span><span class="nx">prefix</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">hashes</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">maxlen</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">files</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">files</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">files</span><span class="p">.</span><span class="nx">src</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">file</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">prefix</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;:&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">maxlen</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">maxlen</span><span class="p">,</span> <span class="nx">name</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="nx">name</span><span class="p">,</span> <span class="nx">md5</span><span class="p">(</span><span class="nx">file</span><span class="p">)];</span>
</span><span class='line'>  <span class="p">}).</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">hashes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">table</span><span class="p">([</span><span class="nx">maxlen</span> <span class="o">+</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">32</span><span class="p">],</span> <span class="nx">data</span><span class="p">));</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hashes</span> <span class="o">=</span> <span class="nx">hashes</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;\n&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span><span class="nx">hashes</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;Generating &#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">dest</span><span class="p">.</span><span class="nx">cyan</span> <span class="o">+</span> <span class="s1">&#39;...&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">dest</span><span class="p">,</span> <span class="nx">hashes</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">ok</span><span class="p">();</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Il ne reste plus qu'à lancer la tâche :</p>

<p>```
% grunt hash
Running &ldquo;hash:publics&rdquo; (hash) task
Gruntfile.js:    7d0428cb4f97db4bed4ce04e21eac969</p>

<p>Generating public/hash&hellip;OK</p>

<p>Done, without errors.
```</p>

<h2>Conditions d'échec</h2>

<p>Il faut noter que lorsqu'on défini une tâche comme une suite d'autres tâches, toute erreur sur une de ces tâches provoque l'arrêt de la tâche &lsquo;parente&rsquo;.</p>

<p>Par exemple l'exécution de la suite de tâche ci-dessous va échouer lors de la 2ème tâche (ko2) sans exécuter la 3ème (ok3) :</p>

<p>```
grunt.registerTask(&lsquo;ok1&rsquo;, &lsquo;This task succeds&rsquo;, function() {
  grunt.log.writeln(&lsquo;Execution de la tache &ldquo;ok1&rdquo;&rsquo;);
  return true;
});</p>

<p>grunt.registerTask(&lsquo;ko2&rsquo;, &lsquo;This task fails&rsquo;, function() {
  grunt.log.writeln(&lsquo;Execution de la tache &ldquo;ko2&rdquo;&rsquo;);
  return false;
});</p>

<p>grunt.registerTask(&lsquo;ok3&rsquo;, &lsquo;This task succeds&rsquo;, function() {
  grunt.log.writeln(&lsquo;Execution de la tache &ldquo;ok3&rdquo;&rsquo;);
  return true;
});</p>

<p>grunt.registerTask(&lsquo;ok-ko&rsquo;, [&lsquo;ok1&rsquo;, &lsquo;ko2&rsquo;, &lsquo;ok3&rsquo;]);
```</p>

<p>```
% grunt ok-ko
Running &ldquo;ok1&rdquo; task
Execution de la tache &ldquo;ok1&rdquo;</p>

<p>Running &ldquo;ko2&rdquo; task
Execution de la tache &ldquo;ko2&rdquo;
Warning: Task &ldquo;ko2&rdquo; failed. Use &mdash;force to continue.</p>

<p>Aborted due to warnings.
```</p>

<h2>Liens pour aller (encore) plus loin</h2>

<ul>
<li><a href="http://chrisawren.com/posts/Advanced-Grunt-tooling">Advanced Grunt Tooling</a></li>
<li><a href="http://blog.gleitzman.com/post/73110295075/perfecting-your-grunt-workflow">Perfecting your Grunt Workflow</a></li>
</ul>


<h1>Conclusion</h1>

<p>Je vous conseille de jeter un oeil au plugins qui permette d'intégrer les framework de test dans grunt (<a href="https://github.com/kmiyashiro/grunt-mocha">grunt-mocha</a> par exemple) et qui permettent d'aller très loin dans l'automatisation des tâches (corvées ?) courantes.
Vous pouvez aussi examiner le module <a href="http://gruntjs.com/project-scaffolding">grunt-init</a> qui permet d'initialiser des projets rapidement suivant des TEMPLATES prédéterminés.</p>

<p>Enfin, la communauté est très active autour de ce projet, vous trouverez surement le plugin qu'il vous faut.
Pour supporter ce projet, vous pouvez d'ailleurs ajouter aux <code>README.md</code> de vos propres projets, la ligne</p>

<p><code>
[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)
</code></p>

<p>Ce qui fera apparaître le badge suivant :</p>

<p><a href="http://gruntjs.com/"><img src="https://cdn.gruntjs.com/builtwith.png" alt="Built with Grunt" /></a></p>
]]></content>
  </entry>
  
</feed>
